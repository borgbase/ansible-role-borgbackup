---
- name: Create borgbackup timer
  when:
    - borgmatic_timer is defined
    - borgmatic_timer == "systemd"
  tags:
    - install_backup
  block:
    - name: Copy systemd files
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        backup: true
        mode: "{{ item.mode }}"
      with_items:
        - { src: "borgmatic.timer.j2", dest: "/usr/lib/systemd/system/borgmatic.timer", mode: "0644" }
        - { src: "borgmatic.service.j2", dest: "/usr/lib/systemd/system/borgmatic.service", mode: "0644" }

    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Print service facts
      ansible.builtin.debug:
        var: ansible_facts.services

      # If the role is running and the repo is not yet initialized, an error will occur.
      # Therefore the service is stopped by default and must be started manually.
    - name: Stop fresh installed borgmatic.timer and borgmatic.service
      when: ('borgmatic.service' not in services)
      block: 
        - name: Set borgmatic services to stopped - fresh installed
          ansible.builtin.systemd:
            name: "{{ item }}"
            state: stopped
            enabled: false
            masked: false
            daemon_reload: true
          when: "item in services"
          with_items:
            - borgmatic.service
        
        # bug: Need own section without masked else the timer are skipped
        - name: Set  borgmatic timers to stopped - fresh installed
          ansible.builtin.systemd:
            name: "{{ item }}"
            state: stopped
            enabled: false
            daemon_reload: true
          with_items:
            - "borgmatic.timer"

        - name: Show hints
          when: "'backup_init_repo' not in ansible_run_tags"
          ansible.builtin.debug:
            msg: "Attention: Since the repo was not initialized automatically, the systemd service (borgmatic.service) and the timer (bborgmatic.timer) are not activated."
...

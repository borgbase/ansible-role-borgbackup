---
- name: Include OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "{{ ansible_lsb.id }}.yml"

- name: Run OS-specific tasks
  include: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"

- name: Install required System Packages
  package:
    name: "{{ borg_packages }}"
    state: present

- name: adding fuse support
  package:
    name: "{{ borg_packages_fuse }}"
    state: present
  when: borgmatic_fuse_support

- name: Create virtualenv for borg
  pip:
    name: pip-tools
    virtualenv: /opt/borgmatic
    virtualenv_command: "{{ python_bin }} -m venv"

- name: Install required Python Packages
  pip:
    name: "{{ borg_python_packages }}"
    virtualenv: /opt/borgmatic
  when: borg_python_packages is defined and not borgmatic_fuse_support

- name: Install required Python Packages with fuse support
  pip:
    name: "{{ borg_python_packages_fuse }}"
    virtualenv: /opt/borgmatic
  when: borg_python_packages is defined and borgmatic_fuse_support

- name: Create borgmatic command in /usr/local/bin
  copy:
    content: |
      #!/bin/bash
      . /opt/borgmatic/bin/activate
      borgmatic "$@"
    dest: /usr/local/bin/borgmatic
    owner: root
    group: root
    mode: "0755"

- name: Ensure root has SSH key.
  user:
    name: "root"
    generate_ssh_key: yes
    ssh_key_file: "{{ ssh_key_file }}"
    ssh_key_type: ed25519
  register: root_user

- name: Print key created for root user (use for remote repo)
  debug:
    var: root_user['ssh_public_key']

- name: Create new repository for server
  borgbase:
    repository_name: "{{ bb_repo_name }}"
    token: "{{ bb_token }}"
    new_ssh_key: "{{ bb_new_sshkey }}"
    ssh_key: "{{ bb_sshkey }}"
    append_only: "{{ bb_append }}"
    quota_enable: "{{ bb_quota }}"
    quota: "{{ bb_quota_size }}"
    region: "{{ bb_region }}"
    alertdays: "{{ bb_alertdays }}"
  delegate_to: localhost
  become: no
  register: repo_creation
  when: create_repo

- name: Set Repository Fact
  set_fact:
    borg_repository: |-
          {% if borg_repository is defined and borg_repository is string %}
          {{ [borg_repository] + [ repo_creation['data']['repoPath'] ] }}
          {% elif borg_repository is defined %}
          {{ borg_repository + [ repo_creation['data']['repoPath'] ] }}
          {% else %}
          {{ repo_creation['data']['repoPath'] }}
          {% endif %}
  when: create_repo

- name: Ensures /etc/borgmatic exists
  file:
    path: /etc/borgmatic
    state: directory
    mode: 0700
    owner: root

- name: Add Borgmatic Configuration
  template:
    src: config.yaml.j2
    dest: "/etc/borgmatic/{{ borgmatic_config_name }}"
    mode: 0600

- name: Add cron-job for borgmatic (large repo, create and check separate)
  block:
    - name: Add cron job for regular create and prune
      cron:
        name: "{{ borgmatic_cron_name }}"
        hour: "{{ borgmatic_cron_hour }}"
        minute: "{{ borgmatic_cron_minute }}"
        user: "root"
        cron_file: "{{ borgmatic_cron_name }}"
        job: "borgmatic -c /etc/borgmatic/{{ borgmatic_config_name }} --create --prune"
    - name: Add cron job for infrequent checks
      cron:
        name: "{{ borgmatic_cron_name }}-check"
        day: "{{ borgmatic_cron_checks_day }}"
        hour: "{{ borgmatic_cron_checks_hour }}"
        minute: "{{ borgmatic_cron_checks_minute }}"
        user: "root"
        cron_file: "{{ borgmatic_cron_name }}"
        job: "borgmatic -c /etc/borgmatic/{{ borgmatic_config_name }} --check"
  when: borgmatic_large_repo

- name: Add cron-job for borgmatic (normal-sized repo)
  block:
    - name: Add cron job for create, check and prune
      cron:
        name: "{{ borgmatic_cron_name }}"
        hour: "{{ borgmatic_cron_hour }}"
        minute: "{{ borgmatic_cron_minute }}"
        user: "root"
        cron_file: "{{ borgmatic_cron_name }}"
        job: "borgmatic -c /etc/borgmatic/{{ borgmatic_config_name }}"
    - name: Ensure separate check cron job is absent
      cron:
        name: "{{ borgmatic_cron_name }}-check"
        state: absent
  when: not borgmatic_large_repo

- name: Set PATH for borgmatic cron job.
  cron:
    user: "root"
    cron_file: "{{ borgmatic_cron_name }}"
    name: PATH
    env: yes
    value: /usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
